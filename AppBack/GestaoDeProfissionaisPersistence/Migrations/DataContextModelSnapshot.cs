// <auto-generated />
using System;
using GestaoDeProfissionaisPersistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoDeProfissionaisPersistence.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("GestaoDeProfissionaisDomain.Model.Especialidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoDocumentoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TipoDocumentoID");

                    b.ToTable("Especialidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Cardiologia",
                            TipoDocumentoID = 1
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Ortopedia",
                            TipoDocumentoID = 1
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Pediatria",
                            TipoDocumentoID = 1
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Dermatologia",
                            TipoDocumentoID = 1
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Ginecologia",
                            TipoDocumentoID = 1
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Neurologia",
                            TipoDocumentoID = 1
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Psiquiatria",
                            TipoDocumentoID = 1
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Anestesiologia",
                            TipoDocumentoID = 1
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Radiologia",
                            TipoDocumentoID = 1
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Endocrinologia",
                            TipoDocumentoID = 1
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Nutricionista Clínico",
                            TipoDocumentoID = 2
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Nutrição Esportiva",
                            TipoDocumentoID = 2
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Nutrição Oncológica",
                            TipoDocumentoID = 2
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Fisioterapia Ortopédica",
                            TipoDocumentoID = 3
                        },
                        new
                        {
                            Id = 15,
                            Nome = "Fisioterapia Neurológica",
                            TipoDocumentoID = 3
                        },
                        new
                        {
                            Id = 16,
                            Nome = "Fisioterapia Respiratória",
                            TipoDocumentoID = 3
                        },
                        new
                        {
                            Id = 17,
                            Nome = "Ortodontia",
                            TipoDocumentoID = 4
                        },
                        new
                        {
                            Id = 18,
                            Nome = "Implantodontia",
                            TipoDocumentoID = 4
                        },
                        new
                        {
                            Id = 19,
                            Nome = "Endodontia",
                            TipoDocumentoID = 4
                        },
                        new
                        {
                            Id = 20,
                            Nome = "Enfermagem Geral",
                            TipoDocumentoID = 5
                        },
                        new
                        {
                            Id = 21,
                            Nome = "Enfermagem Obstétrica",
                            TipoDocumentoID = 5
                        },
                        new
                        {
                            Id = 22,
                            Nome = "Psicologia Clínica",
                            TipoDocumentoID = 6
                        },
                        new
                        {
                            Id = 23,
                            Nome = "Psicologia Organizacional",
                            TipoDocumentoID = 6
                        },
                        new
                        {
                            Id = 24,
                            Nome = "Neuropsicologia",
                            TipoDocumentoID = 6
                        },
                        new
                        {
                            Id = 25,
                            Nome = "Farmácia Clínica",
                            TipoDocumentoID = 7
                        },
                        new
                        {
                            Id = 26,
                            Nome = "Farmácia Hospitalar",
                            TipoDocumentoID = 7
                        },
                        new
                        {
                            Id = 27,
                            Nome = "Análises Clínicas",
                            TipoDocumentoID = 7
                        },
                        new
                        {
                            Id = 28,
                            Nome = "Personal Trainer",
                            TipoDocumentoID = 8
                        },
                        new
                        {
                            Id = 29,
                            Nome = "Preparação Física",
                            TipoDocumentoID = 8
                        });
                });

            modelBuilder.Entity("GestaoDeProfissionaisDomain.Model.Profissional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataUltimaAlteracao")
                        .HasColumnType("TEXT");

                    b.Property<int>("EspecialidadeID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumDocumento")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EspecialidadeID");

                    b.ToTable("Profissionais");
                });

            modelBuilder.Entity("GestaoDeProfissionaisDomain.Model.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "CRM"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "CRN"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "CREFITO"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "CRO"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "COREN"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "CRP"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "CRF"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "CREF"
                        });
                });

            modelBuilder.Entity("GestaoDeProfissionaisDomain.Model.Especialidade", b =>
                {
                    b.HasOne("GestaoDeProfissionaisDomain.Model.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("GestaoDeProfissionaisDomain.Model.Profissional", b =>
                {
                    b.HasOne("GestaoDeProfissionaisDomain.Model.Especialidade", "Especialidade")
                        .WithMany()
                        .HasForeignKey("EspecialidadeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidade");
                });
#pragma warning restore 612, 618
        }
    }
}
